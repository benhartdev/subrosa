<div className="add-artwork-container">
  {message && <p className="status-message">{message}</p>}

  <form onSubmit={handleSubmit} encType="multipart/form-data">
    <input type="hidden" name="artistId" value={formData.artistId} />

    <div className="form-row">
      <div className="form-group">
        <label>Titre</label>
        <input type="text" name="title" value={formData.title} onChange={handleChange} required />
      </div>
      <div className="form-group">
        <label>Date de création</label>
        <input type="date" name="creation_date" value={formData.creation_date} onChange={handleChange} required />
      </div>
    </div>

    <label>Description</label>
    <textarea name="description" value={formData.description} onChange={handleChange} rows={3} required />

    <div className="form-row">
      <div className="form-group">
        <label>Technique / Support</label>
        <input type="text" name="medium" value={formData.medium} onChange={handleChange} required />
      </div>
      <div className="form-group">
        <label>Prix</label>
        <input type="number" name="price" value={formData.price} onChange={handleChange} required />
      </div>
      <div className="form-group">
        <label>Devise</label>
        <select name="currency" value={formData.currency} onChange={handleChange}>
          <option value="€">€</option>
          <option value="$">$</option>
        </select>
      </div>
    </div>

    <div className="form-row">
      <div className="form-group">
        <label>Quantité en stock</label>
        <input type="number" name="in_stock" value={formData.in_stock} onChange={handleChange} required />
      </div>
      <div className="form-group">
        <label>Statut</label>
        <select name="status" value={formData.status} onChange={handleChange} required>
          <option value="available">Disponible</option>
          <option value="sold">Vendu</option>
          <option value="reserved">Réservé</option>
        </select>
      </div>
    </div>

    <div className="form-row">
      <div className="form-group">
        <label>Couleurs dominantes</label>
        <input type="text" name="dominant_colors" value={formData.dominant_colors} onChange={handleChange} required />
      </div>
      <div className="form-group">
        <label>Thèmes</label>
        <input type="text" name="themes" value={formData.themes} onChange={handleChange} required />
      </div>
    </div>

    <fieldset>
      <legend>Dimensions (en {formData.dimensions.unit})</legend>
      <div className="form-row">
        <div className="form-group">
          <label>Hauteur</label>
          <input type="number" name="height" value={formData.dimensions.height} onChange={handleChange} required />
        </div>
        <div className="form-group">
          <label>Largeur</label>
          <input type="number" name="width" value={formData.dimensions.width} onChange={handleChange} required />
        </div>
        <div className="form-group">
          <label>Profondeur (optionnel)</label>
          <input type="number" name="depth" value={formData.dimensions.depth} onChange={handleChange} />
        </div>
        <div className="form-group">
          <label>Unité</label>
          <select name="unit" value={formData.dimensions.unit} onChange={handleChange}>
            <option value="cm">cm</option>
            <option value="inch">inch</option>
          </select>
        </div>
      </div>
    </fieldset>

    <fieldset>
      <legend>Images</legend>
      {images.map((img, index) => (
        <div key={index} className="image-upload-block">
          <input type="file" accept="image/*" onChange={(e) => handleImageChange(index, e.target.files[0])} required />
          <input
            type="text"
            placeholder="Texte alternatif"
            value={img.altText}
            onChange={(e) => handleAltTextChange(index, e.target.value)} required />
        </div>
      ))}
    </fieldset>

    <button type="submit">Soumettre l'œuvre</button>
  </form>

  {submittedArtworks.length > 0 && (
    <div className="submitted-gallery">
      <h3>Œuvres récemment ajoutées :</h3>
      <div className="gallery-grid">
        {submittedArtworks.map((art, idx) => (
          <div key={idx} className="gallery-card">
            <img
              src={
                art.images?.[0]?.url?.startsWith('http')
                  ? art.images[0].url
                  : `${process.env.NEXT_PUBLIC_API_BASE_URL}${art.images[0].url}`
              }
              alt={art.images?.[0]?.altText || art.title}
            />
            <p>{art.title}</p>
          </div>
        ))}
      </div>
    </div>
  )}
</div>
